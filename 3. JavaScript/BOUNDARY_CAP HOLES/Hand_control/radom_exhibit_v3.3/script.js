//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// <-------------------------------------------------- PARAMETERS & CONFIGURATION  -------------------------------------------------->
var ID_ARRAY = [];
var ID = 0;

// <----------    General Configuration   ----------> // 基礎控制 (必)
const FILE_QTY             = 32;      // 影片數量
const WIDTH                = 1920;    // 畫面橫向大小
const HEIGHT               = 1080;    // 畫面縱向大小

// <---------- Auto Action Configuration  ----------> // 影片隨機動作參數區塊

const WIDTH_MIN            = 4;      // 最小寬度參數
const WIDTH_MAX            = 16;     // 最大寬度參數
const WIDTH_PX_SCALE       = 200;    // 寬度基數 (單位：px); 隨機出現寬度範圍：最小/最小寬度參數 x 寬度基數

const HEIGHT_MIN           = 4;      // 最小高度參數
const HEIGHT_MAX           = 11;     // 最大高度參數
const HEIGHT_PX_SCALE      = 200;    // 高度基數 (單位：px); 隨機出現寬度範圍：最小/最小寬度參數 x 寬度基數

const TOP_MIN              = 0;      // 最小頂距參數
const TOP_MAX              = 6;      // 最大頂距參數
const TOP_MARGIN_PX_SCALE  = 200;    // 頂距基數 (單位：px); 隨機出現頂距範圍：最小/最小頂距參數 x 頂距基數

const LEFT_MIN             = 0;      // 最小左距參數
const LEFT_MAX             = 7;      // 最大左距參數
const LEFT_MARGIN_PX_SCALE = 350;    // 左距基數 (單位：px); 隨機出現左距範圍：最小/最小左距參數 x 左距基數

const MIN_INSERT_SEC       = 2;      // 最小隨機加入影片秒數
const MAX_INSERT_SEC       = 5;      // 最大隨機加入影片秒數

const MIN_AUTO_REMOVE_SEC  = 20;     // 最小隨機刪除影片秒數
const MAX_AUTO_REMOVE_SEC  = 30;     // 最大隨機刪除影片秒數

const SWITCH_ID_SEC        = 6;      // 隨機切換控制項目秒數

// <---------- Hand Control Configuration ---------->  // 手勢感應控制參數區塊
const X_MAGNIFY            = 3   // X軸控制增幅比例 1.8
const Y_MAGNIFY            = 2;     // Y軸控制增幅比例 2
const Y_TOP_GAP            = 50;   // Y軸頂距固定扣除高度

const ZOOM_MAGNIFY         = 15;    // 放大增幅倍數  5
const ILLUMINATION_DOWN    = 1;     // 亮度降幅 ; 數字越小起始量度越高
const ROTATE_DECELERATION  = 12;    // 旋轉敏感度; 數字越大越不敏感 / 數字越小越敏感

const SIZE_TO_REMOVE       = -1;    // 最大刪除控制項目尺寸 (單位：px)
const BRIGHTNESS_TO_REMOVE = -1;     // 最大刪除控制項目亮度 (單位：%)

const MIN_DISTANCE         = -10;     // 最小允許控制距離     (單位：公分)
const MAX_DISTANCE         = 120;   // 最大允許控制距離     (單位：公分)

const ZOOM_OR_BRIGHT_SIZE  = 100;   // 中指、無名指、小指縮起高度切換亮度或大小之標準 (單位：px) default 120

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// <-------------------------------------------------- Media Pipe Hands Module -------------------------------------------------->
const videoElement = document.getElementsByClassName('input_video')[0];
const canvasElement = document.getElementsByClassName('output_canvas')[0];
const canvasCtx = canvasElement.getContext('2d');

const hands = new Hands( {locateFile: (file) => { return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`; }} );
const camera = new Camera( videoElement, { onFrame: async () => { await hands.send({image: videoElement}); }, width: WIDTH, height: HEIGHT } );
hands.setOptions({ maxNumHands: 1, modelComplexity: 1, minDetectionConfidence: 0.5, minTrackingConfidence: 0.5 });

function onResults(results)
{
	canvasCtx.save();
	canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);
	canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);

	if (results.multiHandLandmarks)
	{
		for (const landmarks of results.multiHandLandmarks)
		{
			drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {color: '#00FF00', lineWidth: 5});
			drawLandmarks(canvasCtx, landmarks, {color: '#FF0000', lineWidth: 2});
			coordinateControl(landmarks);
		}
	}
	canvasCtx.restore();
}
hands.onResults(onResults);
camera.start();

// <-------------------------------------------------- Major Operations -------------------------------------------------->
async function videoLoop()
{
	var rand_sec = getRandomInt( MIN_INSERT_SEC, MAX_INSERT_SEC+1 ) * 1000;

	while (true)
	{
		await wait( rand_sec );
		appendVideo( FILE_QTY, WIDTH_MIN, WIDTH_MAX, WIDTH_PX_SCALE, HEIGHT_MIN, HEIGHT_MAX, HEIGHT_PX_SCALE, TOP_MIN, TOP_MAX, TOP_MARGIN_PX_SCALE, LEFT_MIN, LEFT_MAX, LEFT_MARGIN_PX_SCALE );
		setTimeOutSwitchID( SWITCH_ID_SEC * 1000 );
		setTimeOutRemoveVideo( MIN_AUTO_REMOVE_SEC, MAX_AUTO_REMOVE_SEC );
	}
}

function coordinateControl(landmarks)
{
	var width  = WIDTH;
	var height = HEIGHT;

	var x_thumb      = Math.trunc( width - ( landmarks[4].x * width) );
	var y_thumb      = Math.trunc( landmarks[4].y * height );
	var x_thumb_mcp  = Math.trunc( width - ( landmarks[2].x * width ) );
	var y_thumb_mcp  = Math.trunc( landmarks[2].y * height );

	var x_index      = Math.trunc( width - ( landmarks[8].x * width) );
	var y_index      = Math.trunc( landmarks[8].y * height );
	var x_index_mcp  = Math.trunc( width - ( landmarks[5].x * width) );
	var y_index_mcp  = Math.trunc( landmarks[5].y * height );

	var x_middle     = Math.trunc( width - ( landmarks[12].x * width) );
	var y_middle     = Math.trunc( landmarks[12].y * height );
	var x_middle_mcp = Math.trunc( width - ( landmarks[9].x * width) );
	var y_middle_mcp = Math.trunc( landmarks[9].y * height );

	var x_ring       = Math.trunc( width - ( landmarks[16].x * width) );
	var y_ring       = Math.trunc( landmarks[16].y * height );
	var x_ring_mcp   = Math.trunc( width - ( landmarks[13].x * width) );
	var y_ring_mcp   = Math.trunc( landmarks[13].y * height );

	var x_pinky      = Math.trunc( width - ( landmarks[20].x * width) );
	var y_pinky      = Math.trunc( landmarks[20].y * height );
	var x_pinky_mcp  = Math.trunc( width - ( landmarks[17].x * width) );
	var y_pinky_mcp  = Math.trunc( landmarks[17].y * height );
	
	var x_wrist      = Math.trunc( width - ( landmarks[0].x * width) );
	var y_wrist      = Math.trunc( landmarks[0].y * height );
	
	var x_thumb_index_median = Math.trunc( (x_index + x_thumb) / 2 );
	var y_thumb_index_median = Math.trunc( (y_index + y_thumb) / 2 );
	
	// var slope               = ( y_index - y_index_mcp ) / ( x_index - x_index_mcp ) ;
	var slope               = ( y_index_mcp - y_pinky_mcp ) / ( x_index_mcp - x_pinky_mcp ) ;
	
	var stretch_size_thumb       = Math.trunc( Math.sqrt( Math.pow( x_thumb-x_thumb_mcp, 2) + Math.pow( y_thumb-y_thumb_mcp, 2 ) ) );
	var stretch_size_index       = Math.trunc( Math.sqrt( Math.pow( x_index-x_index_mcp, 2) + Math.pow( y_index-y_index_mcp, 2 ) ) );
	var stretch_size_middle      = Math.trunc( Math.sqrt( Math.pow( x_middle-x_middle_mcp, 2) + Math.pow( y_middle-y_middle_mcp, 2 ) ) );
	var stretch_size_ring        = Math.trunc( Math.sqrt( Math.pow( x_ring-x_ring_mcp, 2) + Math.pow( y_ring-y_ring_mcp, 2 ) ) );
	var stretch_size_pinky       = Math.trunc( Math.sqrt( Math.pow( x_pinky-x_pinky_mcp, 2) + Math.pow( y_pinky-y_pinky_mcp, 2 ) ) );
	var stretch_size_thumb_index = Math.trunc( Math.sqrt( Math.pow( x_index-x_thumb, 2) + Math.pow( y_index-y_thumb, 2 ) ) );

	var distance                 = Math.trunc ( 90 - ( landmarks[0].z * 100000000 )  );
	var depth_weight             = distance - 40;

	// console.log("Distance ---> %f ", distance);
	// console.log("Depth Weight ---> %d ", depth_weight);
	// console.log("Thumb  Stretch ---> %d ", stretch_size_thumb);
	// console.log("Index  Stretch ---> %d ", stretch_size_index);
	// console.log("Middle Stretch ---> %d ", stretch_size_middle);
	// console.log("Ring   Stretch ---> %d ", stretch_size_ring);
	// console.log("Pinky  Stretch ---> %d ", stretch_size_pinky);
	// console.log("Thumb_Index Stretch ---> %d ", stretch_size_thumb_index);

	if ( isActivateHandControl(distance) )
	{
		getMovement( x_thumb_index_median, y_thumb_index_median, slope, stretch_size_thumb_index, stretch_size_thumb, stretch_size_index, stretch_size_middle, stretch_size_ring, stretch_size_pinky, ZOOM_MAGNIFY, ILLUMINATION_DOWN, X_MAGNIFY, Y_MAGNIFY, Y_TOP_GAP, ROTATE_DECELERATION, depth_weight );
		// drawHands( x_thumb, y_thumb, x_thumb_mcp, y_thumb_mcp, x_index, y_index, x_index_mcp, y_index_mcp, x_middle, y_middle, x_middle_mcp, y_middle_mcp, x_ring, y_ring, x_ring_mcp, y_ring_mcp, x_pinky, y_pinky, x_pinky_mcp, y_pinky_mcp, x_wrist, y_wrist, x_thumb_index_median, y_thumb_index_median );
	}
}

function getMovement(  x_thumb_index_median, y_thumb_index_median, slope, stretch_size_thumb_index, stretch_size_thumb, stretch_size_index, stretch_size_middle, stretch_size_ring, stretch_size_pinky, zoom_magnify, illuminate_down, x_magnify, y_magnify, y_top_gap, rotate_deceleration, depth_weight )
{
	if (ID != undefined)
	{
		console.log("Active ID-------------> [ %d ]", ID);
		var element = document.getElementById(ID);
		if (element != null)
		{
			element.style.zIndex = 999;
			element.style.position = "absolute";
			var marginTop  = ( ( y_thumb_index_median * y_magnify ) - y_top_gap ) + "px";
			var marginLeft = Math.trunc(  x_thumb_index_median * x_magnify ) + "px";
			element.style.marginTop  = marginTop;
			element.style.marginLeft = marginLeft;

			console.log("marginTop Movement ---> [ %s ]", marginTop);
			console.log("marginLeft Movement --> [ %s ]", marginLeft);
			
			if ( isBrightnessControlActivate(stretch_size_thumb_index, stretch_size_thumb, stretch_size_index, stretch_size_middle, stretch_size_ring, stretch_size_pinky) )
			{

				var illumination = Math.trunc ( stretch_size_thumb_index / illuminate_down);
				var brightness = "brightness(" + illumination + "%)";
				element.style.filter =  brightness;
			}
			else
			{
				if (stretch_size_thumb_index > 100)
				{
					var zoom = ( stretch_size_thumb_index * zoom_magnify ) + "px";
					element.style.width = zoom;
					element.style.height = zoom;
					// marginLeft = Math.trunc(  (x_thumb_index_median * x_magnify) - 600 ) + "px";
					// element.style.marginLeft = marginLeft;
					// element.style.marginLeft 
					// element.style.height = zoom;
				}
				// var zoom = ( stretch_size_thumb_index * zoom_magnify ) + "px";
				// element.style.width = zoom;
				// element.style.height = zoom;
			}
			
			var rotate = "rotate(" + Math.floor( ( slope / rotate_deceleration) * 1000 ) / 1000 + "turn)";
			element.style.transform = rotate;

			console.log("Zoom -----------------> [ %s ] ", zoom);
			console.log("Brightness -----------> [ %s ] ", brightness);
			console.log("Rotate ---------------> [ %s ] ", rotate);

			if ( isRemoveVideo(stretch_size_thumb_index, illumination ) )
			{
				manualRemoveVideo();
				setTimeOutSwitchID(500);
			}
		}
	}
}

function isActivateHandControl(distance)
{
	if ( distance > MIN_DISTANCE && distance < MAX_DISTANCE )
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

function isRemoveVideo(stretch_size_thumb_index , illumination)
{
	if ( illumination < BRIGHTNESS_TO_REMOVE || stretch_size_thumb_index < SIZE_TO_REMOVE )
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

function isBrightnessControlActivate(stretch_size_thumb_index, stretch_size_thumb, stretch_size_index, stretch_size_middle, stretch_size_ring, stretch_size_pinky)
{

	return stretch_size_middle < ZOOM_OR_BRIGHT_SIZE && stretch_size_ring < ZOOM_OR_BRIGHT_SIZE && stretch_size_pinky < ZOOM_OR_BRIGHT_SIZE ? true : false

	if ( stretch_size_middle < ZOOM_OR_BRIGHT_SIZE && stretch_size_ring < ZOOM_OR_BRIGHT_SIZE && stretch_size_pinky < ZOOM_OR_BRIGHT_SIZE )
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

// <---------------------------------------- Create and Append Operations ---------------------------------------->
function appendVideo(fileQty, widthMin, widthMax, widthPxScale, heightMin, heightMax, heightPxScale, topMin, TopMax, topMarginPxScale, leftMin, leftMax, leftMarginPxScale)
{
	var fileNum   = getRandomInt( 1, fileQty+1 );
	var source  = 'src/' + fileNum.toString() + ".mp4";
	var vedioId   = "video" + fileNum.toString();
	var container = document.getElementById("container");
	var showbox   = document.createElement("div");
	var video     = document.createElement("video");

	// Initialize basic attributes of Showbox Element
	showbox.setAttribute("id", fileNum.toString());
	showbox.style.width      = (getRandomInt( widthMin, widthMax+1 ) * widthPxScale).toString() + "px";       // Initialize Video Width
	showbox.style.height     = (getRandomInt( heightMin, heightMax+1 ) * heightPxScale).toString() + "px";    // Initialize Video Height
	showbox.style.marginTop  = (getRandomInt( topMin, TopMax+1 )  * topMarginPxScale).toString() + "px";      // Initialize Video Top Margin
	showbox.style.marginLeft = (getRandomInt( leftMin, leftMax+1 )  * leftMarginPxScale).toString() + "px";   // Initialize Video Left Margin
	showbox.style.position   = "absolute";
	showbox.style.clipPath   = clipPathGen();
	
	// Initialize basic attributes of Video Element
	video.setAttribute("id", vedioId);
	video.setAttribute("src", source);
	video.setAttribute("width", "100%");
	video.setAttribute("height", "100%");
	video.autoplay = true;
	video.muted    = true;
	video.loop     = true;

	// Append Video to Showbox and Container
	container.appendChild(showbox);
	showbox.appendChild(video);

	console.log("Video Added ----------> [ %s ]", fileNum);
	console.log("Width x Height -------> [ %s ] x [ %s ]", showbox.style.width, showbox.style.height);
	console.log("Margin Top | Left ----> [ %s ] | [ %s ]", showbox.style.marginTop, showbox.style.marginLeft);

	ID_ARRAY[fileNum]++;

	ID = getRandomActiveID(); // update 2022_09_23, reason: to avoid no Active ID for too long

	return fileNum;
}

function clipPathGen()
{
	// var clipPaths = [
	// 			"polygon(36% 0, 100% 0, 85% 100%, 37% 100%)",
	// 			"polygon(16% 46%, 100% 0, 85% 100%, 55% 100%)",
	// 			"polygon(41% 3%, 94% 39%, 100% 90%, 23% 90%)",
	// 			"polygon(0 0, 46% 5%, 100% 90%, 45% 100%)",
	// 			"polygon(6% 55%, 99% 15%, 88% 80%, 0 96%)",
	// 			"polygon(0 48%, 90% 33%, 100% 76%, 24% 84%)",
	// 			"polygon(44% 0, 70% 0, 49% 100%, 21% 100%)",
	// 			"polygon(56% 18%, 41% 41%, 16% 60%, 0 100%, 32% 89%, 30% 77%, 41% 69%, 58% 54%, 83% 36%, 96% 16%, 100% 0, 65% 5%)",
	// 			"polygon(36% 57%, 48% 39%, 63% 7%, 71% 51%, 60% 100%, 55% 91%, 46% 82%)",
	// 			"polygon(45% 68%, 63% 47%, 17% 15%, 100% 44%, 80% 61%, 78% 91%, 16% 88%)",
	// 			"polygon(34% 24%, 80% 10%, 44% 5%, 85% 70%, 18% 20%, 50% 100%, 84% 85%, 26% 65%, 13% 39%, 33% 89%)",
	// 			"polygon(64% 78%, 50% 31%, 85% 43%, 23% 82%, 0% 38%)",
	// 			"polygon(33% 13%, 14% 86%, 100% 50%, 60% 86%, 90% 66%, 0% 50%)",
	// 			"polygon(61% 88%, 15% 15%, 15% 0%, 23% 43%, 85% 15%, 80% 42%, 100% 85%, 85% 85%, 85% 34%, 15% 100%, 15% 85%, 10% 64%)",
	// 			"polygon(41% 50%, 100% 0%, 0 11%, 25% 100%, 0% 50%)",
	// 			"polygon(72% 44%, 7% 53%, 81% 93%, 20% 70%, 33% 52%, 35% 12%)",
	// 			"polygon(10% 25%, 35% 25%, 91% 69%, 65% 0%, 10% 81%, 90% 25%, 90% 50%, 65% 50%, 18% 7%, 35% 100%, 35% 50%, 18% 98%)",
	// 			"polygon(34% 35%, 10% 88%, 25% 100%, 25% 25%, 75% 25%, 75% 75%, 25% 75%, 25% 100%, 60% 53%, 100% 0%)",
	// 			"polygon(73% 35%, 24% 84%, 100% 75%, 75% 75%, 51% 35%, 50% 75%, 0% 75%)",
	// 			"polygon(14% 51%, 74% 15%, 30% 50%, 64% 83%, 24% 78%, 50% 70%, 84% 54%, 100% 80%, 13% 64%, 50% 13%, 80% 0%, 50% 30%)",
	// 			"polygon(51% 88%, 69% 28%, 50% 30%, 66% 62%, 20% 65%, 40% 55%)",
	// 			"polygon(87% 75%, 60% 20%, 60% 0%, 85% 50%, 60% 100%, 60% 80%, 0% 80%)",
	// 			"polygon(40% 0%, 40% 20%, 67% 67%, 0 23%, 24% 91%, 85% 55%, 0% 50%)",
	// 			"polygon(50% 0%, 11% 74%, 98% 35%, 68% 57%, 81% 11%, 50% 70%, 86% 53%, 32% 57%, 26% 26%, 39% 35%)",
	// 			"polygon(43% 13%, 65% 50%, 100% 43%, 54% 31%, 92% 58%, 59% 87%, 26% 33%, 8% 56%, 69% 16%)",
	// 			"polygon(30% 8%, 14% 84%, 29% 96%, 21% 19%, 64% 32%, 75% 76%, 25% 75%, 43% 64%, 68% 94%, 77% 29%)",
	// 			"polygon(11% 25%, 77% 27%, 70% 47%, 75% 100%, 87% 70%)",
	// 			"polygon(50% 0%, 87% 60%, 100% 35%, 68% 73%, 50% 69%, 50% 100%, 29% 89%, 13% 53%, 0% 35%, 29% 26%)",
	// 			"polygon(29% 18%, 76% 16%, 90% 35%, 90% 79%, 59% 85%, 30% 86%, 12% 73%, 0% 20%)",
	// 			"polygon(50% 0%, 61% 35%, 98% 35%, 87% 63%, 82% 19%, 50% 70%, 38% 91%, 17% 62%, 57% 86%, 61% 6%)",
	// 			"polygon(34% 8%, 92% 29%, 85% 89%, 69% 71%, 4% 55%, 19% 74%, 95% 64%)"
	// 			];

	var clipPaths = [
		"polygon(4% 42%, 11% 37%, 16% 28%, 22% 20%, 28% 18%, 34% 16%, 40% 13%, 46% 7%, 54% 8%, 59% 6%, 62% 6%, 64% 10%, 69% 13%, 76% 14%, 83% 20%, 89% 20%, 94% 24%, 93% 29%, 94% 34%, 94% 39%, 91% 43%, 89% 47%, 86% 51%, 89% 55%, 91% 58%, 92% 61%, 87% 67%, 84% 70%, 83% 76%, 86% 84%, 85% 87%, 83% 90%, 75% 95%, 69% 96%, 66% 87%, 61% 80%, 58% 68%, 57% 61%, 48% 59%, 45% 62%, 40% 66%, 33% 66%, 28% 66%, 26% 63%, 27% 59%, 33% 53%, 36% 48%, 43% 50%, 48% 48%, 50% 43%, 46% 39%, 39% 40%, 34% 40%, 32% 34%, 33% 29%, 25% 32%, 23% 34%, 20% 38%, 19% 39%, 17% 41%, 14% 43%, 13% 45%, 13% 48%, 12% 49%, 10% 50%, 8% 50%, 6% 54%, 3% 50%)",
		"polygon(33% 12%, 35% 9%, 30% 9%, 20% 12%, 15% 23%, 18% 31%, 19% 38%, 26% 45%, 30% 51%, 31% 60%, 38% 64%, 41% 65%, 42% 74%, 40% 77%, 37% 84%, 35% 90%, 36% 93%, 45% 96%, 56% 97%, 68% 86%, 78% 89%, 85% 89%, 88% 85%, 92% 79%, 89% 73%, 81% 65%, 75% 67%, 66% 61%, 73% 56%, 80% 52%, 85% 57%, 85% 62%, 89% 65%, 89% 64%, 90% 60%, 88% 58%, 85% 53%, 85% 49%, 86% 46%, 86% 45%, 76% 46%, 72% 46%, 71% 39%, 75% 30%, 73% 26%, 74% 21%, 67% 17%, 59% 22%, 58% 17%, 62% 10%, 63% 7%, 62% 3%, 58% 2%, 54% 7%, 56% 10%, 54% 12%, 50% 13%, 49% 13%, 43% 11%, 37% 13%)",
		"polygon(85% 19%, 75% 14%, 57% 13%, 50% 13%, 39% 13%, 32% 17%, 26% 29%, 29% 32%, 30% 40%, 30% 49%, 25% 57%, 25% 63%, 25% 74%, 25% 79%, 25% 85%, 25% 91%, 18% 94%, 11% 90%, 7% 84%, 15% 79%, 16% 75%, 18% 73%, 18% 67%, 15% 64%, 10% 58%, 10% 54%, 14% 48%, 14% 45%, 11% 40%, 9% 37%, 10% 32%, 11% 25%, 9% 23%, 9% 17%, 10% 12%, 15% 6%, 26% 3%, 36% 4%, 46% 4%, 62% 7%, 73% 6%, 76% 6%, 83% 6%, 85% 9%, 90% 15%, 93% 15%, 92% 24%, 87% 25%, 81% 23%, 72% 24%, 75% 19%, 78% 20%, 81% 19%, 82% 19%)",
		"polygon(32% 3%, 24% 6%, 23% 12%, 28% 18%, 28% 24%, 25% 30%, 23% 34%, 13% 42%, 10% 49%, 15% 52%, 18% 50%, 21% 50%, 26% 53%, 26% 58%, 25% 64%, 30% 73%, 32% 76%, 42% 76%, 48% 82%, 50% 86%, 66% 91%, 73% 92%, 81% 92%, 89% 95%, 94% 92%, 93% 88%, 87% 87%, 83% 85%, 77% 81%, 77% 72%, 82% 68%, 85% 71%, 90% 73%, 94% 70%, 95% 63%, 97% 57%, 95% 50%, 94% 47%, 91% 46%, 88% 50%, 83% 55%, 82% 54%, 76% 52%, 74% 56%, 70% 56%, 64% 55%, 59% 53%, 58% 50%, 53% 48%, 52% 43%, 55% 41%, 58% 41%, 62% 38%, 65% 37%, 68% 36%, 67% 33%, 60% 37%, 55% 38%, 50% 37%, 50% 32%, 51% 25%, 57% 27%, 69% 26%, 75% 21%, 81% 20%, 79% 16%, 75% 13%, 70% 15%, 63% 18%, 60% 18%, 53% 15%, 52% 8%, 49% 6%, 47% 8%, 45% 9%, 43% 14%, 41% 12%, 37% 9%, 36% 7%)",
		"polygon(22% 12%, 25% 18%, 30% 27%, 37% 32%, 43% 38%, 52% 40%, 55% 40%, 60% 38%, 66% 37%, 72% 34%, 72% 30%, 76% 27%, 79% 27%, 81% 29%, 83% 21%, 81% 18%, 85% 15%, 89% 20%, 92% 24%, 96% 29%, 97% 33%, 93% 37%, 89% 38%, 83% 40%, 85% 43%, 89% 47%, 90% 48%, 96% 53%, 95% 60%, 91% 59%, 84% 57%, 80% 58%, 79% 63%, 71% 64%, 65% 61%, 61% 63%, 55% 64%, 52% 67%, 45% 60%, 40% 59%, 40% 65%, 41% 72%, 43% 75%, 38% 82%, 33% 84%, 28% 86%, 16% 87%, 12% 87%, 8% 82%, 7% 74%, 9% 60%, 4% 49%, 3% 37%, 3% 30%, 5% 20%, 8% 15%, 10% 11%, 12% 9%, 14% 13%, 16% 10%)",
		"polygon(66% 10%, 59% 15%, 56% 19%, 61% 22%, 63% 20%, 66% 22%, 68% 25%, 67% 29%, 62% 32%, 61% 36%, 64% 44%, 64% 50%, 64% 61%, 64% 65%, 59% 65%, 56% 63%, 51% 67%, 48% 73%, 49% 77%, 48% 82%, 46% 86%, 44% 88%, 39% 84%, 38% 81%, 34% 86%, 34% 89%, 32% 92%, 28% 94%, 21% 95%, 14% 95%, 15% 88%, 19% 85%, 22% 86%, 26% 82%, 28% 78%, 28% 74%, 30% 70%, 32% 66%, 30% 63%, 30% 59%, 25% 61%, 23% 62%, 21% 64%, 19% 64%, 17% 61%, 19% 56%, 18% 51%, 18% 48%, 19% 45%, 18% 40%, 13% 44%, 13% 46%, 10% 47%, 8% 43%, 8% 39%, 10% 36%, 10% 33%, 9% 29%, 9% 27%, 7% 23%, 11% 21%, 12% 22%, 13% 24%, 14% 24%, 19% 25%, 21% 21%, 22% 20%, 23% 16%, 25% 13%, 29% 13%, 36% 12%, 39% 10%, 41% 8%, 43% 7%, 49% 3%, 56% 2%, 60% 3%, 63% 4%, 65% 6%)",
		"polygon(12% 8%, 6% 18%, 11% 19%, 15% 21%, 19% 21%, 18% 29%, 14% 31%, 13% 33%, 18% 37%, 20% 40%, 23% 43%, 26% 50%, 24% 53%, 22% 56%, 24% 65%, 28% 67%, 34% 64%, 36% 60%, 39% 56%, 41% 54%, 43% 59%, 48% 65%, 55% 67%, 61% 67%, 66% 70%, 69% 77%, 75% 83%, 81% 85%, 83% 90%, 82% 93%, 92% 95%, 96% 96%, 96% 89%, 96% 82%, 96% 72%, 94% 62%, 88% 61%, 89% 54%, 92% 50%, 94% 46%, 96% 39%, 94% 33%, 90% 30%, 85% 42%, 89% 48%, 86% 51%, 85% 60%, 88% 65%, 91% 67%, 92% 70%, 88% 73%, 84% 78%, 81% 82%, 75% 79%, 77% 73%, 72% 64%, 69% 61%, 66% 62%, 59% 62%, 56% 62%, 50% 56%, 53% 46%, 53% 43%, 47% 39%, 45% 43%, 43% 47%, 41% 49%, 39% 50%, 36% 51%, 34% 50%, 33% 48%, 27% 48%, 30% 43%, 30% 43%, 32% 39%, 23% 37%, 21% 33%, 18% 32%, 24% 27%, 23% 23%, 21% 25%, 21% 22%, 21% 20%, 25% 18%, 25% 15%, 24% 14%, 17% 15%, 17% 8%)",
		"polygon(9% 24%, 8% 35%, 11% 40%, 14% 44%, 16% 56%, 18% 61%, 24% 63%, 27% 61%, 31% 61%, 44% 63%, 50% 64%, 64% 71%, 70% 72%, 79% 74%, 84% 74%, 86% 70%, 88% 68%, 93% 67%, 95% 66%, 98% 60%, 91% 56%, 87% 56%, 83% 52%, 81% 48%, 77% 43%, 82% 36%, 85% 33%, 91% 31%, 93% 29%, 96% 25%, 96% 25%, 95% 21%, 92% 26%, 86% 25%, 81% 30%, 79% 30%, 74% 31%, 69% 33%, 65% 34%, 60% 35%, 59% 42%, 55% 44%, 53% 45%, 52% 41%, 54% 39%, 57% 36%, 58% 34%, 59% 32%, 54% 33%, 51% 35%, 51% 31%, 51% 30%, 45% 28%, 43% 25%, 38% 26%, 24% 24%, 20% 28%, 16% 28%, 13% 25%, 12% 24%)",
		"polygon(13% 15%, 19% 18%, 24% 17%, 33% 18%, 35% 20%, 29% 23%, 22% 27%, 15% 32%, 10% 36%, 7% 46%, 4% 53%, 6% 61%, 12% 68%, 15% 71%, 18% 69%, 17% 66%, 18% 64%, 19% 58%, 19% 57%, 23% 58%, 26% 56%, 30% 51%, 28% 48%, 22% 48%, 23% 44%, 25% 40%, 26% 35%, 34% 34%, 37% 35%, 53% 28%, 65% 30%, 69% 31%, 84% 37%, 89% 37%, 97% 32%, 97% 27%, 96% 23%, 91% 25%, 87% 25%, 81% 20%, 79% 20%, 74% 21%, 71% 21%, 70% 22%, 64% 21%, 58% 18%, 50% 18%, 49% 14%, 43% 8%, 39% 6%, 38% 6%, 36% 7%, 34% 8%, 27% 9%, 27% 10%, 25% 12%, 23% 12%, 20% 12%, 17% 13%, 15% 11%, 14% 11%)",
		"polygon(30% 5%, 37% 11%, 38% 16%, 44% 28%, 49% 27%, 50% 24%, 50% 20%, 53% 13%, 53% 9%, 58% 11%, 62% 12%, 66% 11%, 65% 21%, 71% 22%, 72% 21%, 74% 18%, 78% 15%, 84% 13%, 91% 11%, 93% 12%, 90% 15%, 89% 19%, 86% 18%, 83% 20%, 80% 24%, 78% 27%, 73% 31%, 70% 30%, 62% 27%, 61% 27%, 57% 29%, 56% 32%, 64% 33%, 68% 35%, 73% 36%, 74% 41%, 70% 45%, 73% 47%, 78% 52%, 82% 53%, 86% 53%, 89% 48%, 90% 43%, 93% 44%, 91% 51%, 90% 54%, 86% 58%, 86% 62%, 87% 63%, 90% 65%, 83% 70%, 79% 72%, 83% 78%, 91% 82%, 92% 84%, 92% 87%, 90% 92%, 91% 95%, 84% 96%, 80% 91%, 77% 84%, 75% 83%, 69% 82%, 64% 74%, 60% 69%, 55% 69%, 50% 65%, 49% 63%, 48% 55%, 44% 50%, 38% 46%, 34% 36%, 32% 34%, 25% 25%, 16% 18%, 8% 12%, 10% 6%, 15% 3%, 19% 6%, 23% 9%, 25% 10%, 29% 9%)",
		"polygon(6% 4%, 6% 9%, 7% 15%, 7% 19%, 10% 17%, 12% 19%, 14% 21%, 18% 15%, 14% 13%, 12% 13%, 11% 11%, 12% 7%, 11% 5%, 11% 3%, 19% 7%, 24% 13%, 30% 17%, 36% 17%, 44% 14%, 47% 12%, 32% 13%, 29% 15%, 25% 18%, 26% 9%, 20% 12%, 21% 7%)",
		"polygon(75% 9%, 66% 17%, 62% 23%, 65% 32%, 52% 41%, 43% 33%, 38% 39%, 35% 51%, 33% 57%, 32% 61%, 28% 64%, 24% 66%, 16% 59%, 12% 55%, 6% 61%, 3% 65%, 5% 73%, 7% 80%, 5% 91%, 5% 92%, 7% 93%, 11% 94%, 12% 93%, 13% 89%, 13% 85%, 15% 82%, 16% 80%, 20% 82%, 26% 85%, 30% 87%, 35% 87%, 38% 89%, 44% 88%, 47% 81%, 47% 75%, 41% 73%, 42% 70%, 47% 64%, 50% 65%, 52% 68%, 58% 70%, 67% 68%, 71% 65%, 72% 63%, 69% 58%, 68% 55%, 61% 51%, 59% 51%, 59% 55%, 64% 58%, 61% 61%, 59% 61%, 53% 57%, 51% 53%, 56% 47%, 52% 45%, 58% 40%, 65% 37%, 67% 34%, 66% 30%, 67% 23%, 75% 22%, 79% 29%, 81% 37%, 87% 40%, 94% 34%, 96% 30%, 95% 22%, 97% 19%, 98% 17%, 99% 9%, 99% 7%, 96% 7%, 91% 7%, 89% 13%, 88% 14%, 86% 14%, 84% 14%, 86% 10%)",
		"polygon(17% 11%, 13% 17%, 10% 30%, 10% 40%, 11% 49%, 11% 60%, 15% 74%, 16% 80%, 19% 66%, 18% 59%, 16% 47%, 15% 39%, 15% 29%, 17% 12%, 20% 3%, 23% 7%, 24% 20%, 23% 38%, 23% 49%, 23% 64%, 23% 80%, 26% 91%, 29% 90%, 30% 66%, 25% 60%, 22% 53%, 22% 47%, 29% 30%, 32% 13%, 39% 19%, 40% 30%, 40% 38%, 40% 65%, 40% 80%, 40% 87%, 42% 92%, 51% 79%, 47% 71%, 44% 62%, 39% 63%, 37% 51%, 38% 44%, 38% 34%, 41% 26%, 46% 19%, 54% 13%, 58% 17%, 62% 28%, 60% 43%, 59% 56%, 60% 67%, 60% 75%, 64% 88%, 65% 95%, 74% 84%, 70% 80%, 66% 78%, 63% 78%, 61% 87%, 62% 91%, 57% 91%, 56% 83%, 60% 74%, 64% 66%, 66% 61%, 61% 58%, 57% 57%, 58% 47%, 60% 42%, 67% 39%, 76% 37%, 83% 32%, 86% 26%, 86% 21%, 81% 20%, 78% 27%, 87% 38%, 93% 43%, 97% 23%, 94% 13%, 89% 5%, 83% 1%, 83% 19%, 89% 22%, 92% 25%, 97% 47%, 91% 66%, 90% 57%, 84% 44%, 81% 36%, 55% 22%, 50% 27%, 36% 21%)",
		"polygon(9% 11%, 13% 12%, 19% 17%, 26% 18%, 34% 18%, 37% 19%, 54% 21%, 57% 22%, 72% 23%, 80% 24%, 91% 27%, 94% 28%, 92% 22%, 86% 18%, 76% 20%, 70% 25%, 55% 26%, 47% 27%, 41% 26%, 34% 17%, 29% 15%, 26% 20%, 14% 23%, 14% 39%, 16% 43%, 15% 34%, 19% 32%, 21% 38%, 23% 42%, 20% 41%, 21% 38%, 25% 34%, 28% 36%, 30% 40%, 31% 43%, 29% 42%, 27% 38%, 26% 29%, 23% 27%, 20% 30%, 22% 33%, 17% 38%, 19% 22%, 23% 13%, 14% 14%, 8% 14%)",
		"polygon(8% 6%, 5% 15%, 11% 17%, 13% 10%, 15% 7%, 9% 11%, 9% 21%, 10% 34%, 6% 60%, 8% 69%, 11% 75%, 15% 74%, 15% 71%, 9% 68%, 12% 64%, 12% 63%, 11% 62%, 9% 58%, 10% 55%, 10% 52%, 10% 49%, 8% 46%, 7% 45%, 9% 36%, 18% 30%, 25% 32%, 30% 38%, 32% 45%, 42% 35%, 45% 32%, 58% 32%, 67% 40%, 76% 45%, 82% 49%, 93% 52%, 98% 47%, 97% 41%, 99% 36%, 96% 35%, 93% 36%, 93% 39%, 93% 42%, 93% 44%, 91% 45%, 89% 46%, 88% 39%, 88% 32%, 88% 24%, 86% 19%, 84% 12%, 77% 10%, 75% 10%, 70% 15%, 73% 16%, 72% 21%, 76% 20%, 77% 21%, 76% 25%, 74% 28%, 71% 29%, 69% 25%, 67% 20%, 65% 15%, 63% 15%, 57% 13%, 54% 14%, 57% 18%, 56% 19%, 51% 19%, 46% 16%, 42% 13%, 38% 11%, 33% 13%, 31% 19%, 41% 31%, 44% 35%, 44% 39%, 40% 47%, 38% 48%, 34% 47%, 29% 41%, 25% 37%, 22% 24%, 20% 23%, 13% 24%, 9% 27%, 11% 20%, 32% 16%, 42% 15%, 47% 15%, 52% 16%, 44% 23%, 35% 24%, 32% 25%, 34% 30%, 29% 22%, 28% 18%, 28% 15%, 19% 16%, 17% 17%, 14% 18%, 13% 14%, 15% 13%, 15% 12%)",
		"polygon(36% 15%, 30% 9%, 29% 8%, 26% 10%, 26% 12%, 23% 10%, 21% 6%, 21% 6%, 15% 6%, 13% 9%, 14% 11%, 11% 11%, 7% 9%, 6% 13%, 6% 20%, 6% 23%, 7% 29%, 10% 32%, 12% 33%, 11% 40%, 11% 40%, 8% 48%, 6% 54%, 4% 55%, 4% 56%, 9% 64%, 12% 67%, 15% 69%, 16% 70%, 14% 76%, 14% 76%, 13% 76%, 10% 78%, 9% 82%, 9% 85%, 7% 89%, 6% 90%, 8% 93%, 13% 94%, 15% 92%, 19% 88%, 21% 86%, 24% 85%, 24% 83%, 33% 83%, 35% 86%, 40% 88%, 45% 88%, 40% 83%, 41% 78%, 45% 76%, 52% 79%, 58% 82%, 62% 84%, 73% 77%, 80% 84%, 84% 84%, 90% 87%, 91% 89%, 93% 88%, 94% 88%, 95% 87%, 93% 84%, 92% 84%, 93% 82%, 90% 83%, 88% 83%, 84% 82%, 77% 82%, 73% 80%, 68% 75%, 66% 72%, 65% 68%, 61% 65%, 64% 63%, 67% 58%, 67% 54%, 56% 55%, 55% 56%, 48% 64%, 44% 66%, 40% 66%, 40% 71%, 38% 75%, 35% 78%, 30% 79%, 28% 78%, 23% 76%, 20% 75%, 17% 78%, 18% 77%, 18% 69%, 17% 65%, 16% 64%, 15% 64%, 14% 59%, 10% 57%, 11% 54%, 13% 53%, 16% 53%, 18% 49%, 17% 46%, 11% 45%, 11% 44%, 11% 43%, 16% 37%, 18% 36%, 25% 39%, 26% 39%, 25% 34%, 20% 31%, 18% 29%, 16% 26%, 19% 21%, 23% 18%, 27% 22%, 31% 22%, 32% 20%, 35% 17%, 37% 15%)",
		"polygon(55% 7%, 43% 4%, 38% 5%, 35% 6%, 37% 8%, 40% 8%, 44% 7%, 48% 8%, 51% 11%, 50% 13%, 48% 13%, 46% 14%, 42% 14%, 39% 15%, 29% 17%, 24% 17%, 19% 20%, 18% 24%, 24% 26%, 28% 26%, 35% 24%, 37% 24%, 39% 25%, 48% 25%, 54% 24%, 60% 25%, 66% 25%, 69% 25%, 61% 20%, 50% 21%, 41% 21%, 32% 21%, 25% 22%, 21% 22%, 24% 16%, 32% 14%, 34% 15%, 38% 15%, 51% 15%, 56% 16%, 67% 17%, 65% 15%, 61% 13%, 56% 13%, 48% 14%, 45% 14%, 46% 9%, 69% 30%, 59% 31%, 51% 35%, 41% 44%, 46% 68%, 51% 76%, 57% 77%, 57% 61%, 50% 59%, 42% 60%, 38% 60%, 37% 56%, 45% 49%, 59% 54%, 61% 53%, 64% 51%, 74% 60%, 81% 65%, 84% 55%, 80% 51%, 74% 52%, 71% 60%, 73% 62%, 73% 63%, 81% 66%, 79% 58%, 75% 56%, 73% 53%, 70% 52%, 60% 56%, 57% 54%, 55% 51%, 50% 49%, 46% 44%, 42% 39%, 34% 39%, 26% 43%, 23% 48%, 13% 50%, 22% 48%, 25% 42%, 23% 41%, 34% 37%, 52% 38%, 57% 38%, 60% 38%, 51% 36%, 45% 35%, 41% 32%, 21% 51%, 20% 59%, 19% 65%, 23% 79%, 21% 83%, 8% 83%, 7% 80%, 9% 76%, 18% 80%, 19% 89%, 23% 90%, 28% 85%, 25% 74%, 17% 68%, 17% 69%, 15% 51%, 24% 52%, 27% 50%)",
		"polygon(14% 6%, 8% 18%, 11% 36%, 11% 56%, 16% 80%, 20% 87%, 24% 87%, 25% 75%, 30% 63%, 22% 53%, 24% 46%, 31% 44%, 37% 50%, 40% 64%, 46% 75%, 56% 80%, 77% 86%, 87% 88%, 92% 86%, 88% 76%, 82% 75%, 76% 78%, 74% 79%, 71% 70%, 83% 63%, 89% 58%, 86% 53%, 81% 52%, 75% 55%, 70% 59%, 65% 60%, 60% 60%, 60% 52%, 67% 45%, 77% 42%, 82% 40%, 85% 29%, 84% 25%, 67% 29%, 65% 35%, 69% 32%, 72% 19%, 79% 15%, 89% 19%, 93% 19%, 96% 10%, 93% 6%, 78% 14%, 78% 15%, 88% 17%, 75% 9%, 70% 8%, 59% 21%, 55% 17%, 53% 21%, 50% 27%, 44% 31%, 37% 31%, 33% 28%, 31% 19%, 33% 13%, 31% 11%, 24% 11%, 22% 17%, 22% 21%, 20% 33%, 20% 36%, 16% 36%, 10% 34%, 9% 32%, 9% 25%, 15% 21%, 15% 13%, 13% 14%, 13% 13%, 15% 12%, 17% 5%)",
		"polygon(83% 10%, 85% 20%, 89% 29%, 90% 31%, 94% 26%, 94% 21%, 95% 16%, 94% 13%, 91% 14%, 91% 11%, 91% 7%, 90% 5%, 88% 5%, 86% 5%, 86% 8%, 85% 9%, 81% 13%, 78% 16%, 67% 20%, 51% 22%, 40% 30%, 29% 29%, 23% 30%, 15% 30%, 6% 50%, 7% 55%, 10% 54%, 11% 54%, 12% 51%, 12% 48%, 15% 43%, 21% 36%, 28% 32%, 34% 26%, 47% 28%, 54% 24%, 62% 22%, 64% 20%, 66% 18%, 72% 9%, 73% 8%, 78% 7%, 79% 9%)",
		"polygon(4% 68%, 5% 82%, 11% 86%, 18% 83%, 22% 78%, 36% 70%, 44% 69%, 57% 71%, 74% 62%, 79% 49%, 88% 43%, 91% 36%, 93% 25%, 97% 15%, 96% 7%, 94% 6%, 91% 10%, 89% 14%, 85% 16%, 78% 15%, 74% 19%, 72% 28%, 68% 32%, 53% 33%, 46% 35%, 35% 36%, 22% 39%, 14% 44%, 13% 45%, 17% 46%, 15% 47%, 17% 41%, 24% 50%, 21% 58%, 17% 64%, 12% 62%, 10% 65%, 10% 70%, 11% 73%, 10% 79%, 8% 78%, 4% 74%, 6% 72%, 6% 69%, 7% 70%)",
		"polygon(88% 6%, 82% 10%, 80% 12%, 81% 17%, 84% 21%, 89% 21%, 92% 28%, 87% 31%, 85% 32%, 89% 37%, 88% 40%, 84% 48%, 79% 47%, 78% 48%, 76% 54%, 76% 63%, 81% 66%, 85% 69%, 86% 72%, 86% 78%, 86% 81%, 83% 84%, 78% 83%, 76% 81%, 69% 76%, 63% 80%, 69% 92%, 58% 90%, 51% 86%, 38% 80%, 29% 78%, 21% 68%, 13% 66%, 10% 75%, 8% 82%, 8% 87%, 8% 90%, 16% 92%, 21% 88%, 18% 84%, 16% 81%, 21% 78%, 25% 81%, 27% 84%, 29% 85%, 35% 86%, 42% 81%, 47% 77%, 55% 83%, 59% 88%, 62% 93%, 67% 95%, 72% 95%, 74% 91%, 72% 88%, 71% 85%, 75% 76%, 79% 76%, 82% 76%, 86% 77%, 89% 75%, 91% 72%, 87% 65%, 83% 62%, 76% 59%, 73% 55%, 78% 50%, 85% 48%, 87% 49%, 90% 50%, 89% 51%, 86% 52%, 84% 53%, 82% 52%, 81% 39%, 82% 36%, 90% 38%, 93% 35%, 94% 32%, 90% 30%, 89% 29%, 89% 26%, 93% 24%, 94% 23%, 94% 20%, 93% 15%, 92% 10%, 90% 9%, 89% 12%, 90% 5%)",
		"polygon(8% 8%, 14% 13%, 21% 14%, 28% 14%, 32% 14%, 61% 16%, 69% 17%, 76% 19%, 76% 22%, 71% 28%, 71% 33%, 69% 35%, 56% 33%, 51% 33%, 38% 34%, 30% 33%, 26% 32%, 13% 29%, 7% 35%, 6% 47%, 6% 58%, 10% 60%, 15% 56%, 22% 57%, 20% 63%, 17% 67%, 12% 72%, 10% 80%, 8% 88%, 10% 94%, 20% 94%, 25% 91%, 26% 90%, 28% 87%, 31% 79%, 37% 78%, 40% 76%, 46% 78%, 52% 83%, 75% 85%, 79% 92%, 87% 91%, 91% 85%, 90% 75%, 88% 73%, 87% 67%, 89% 56%, 91% 47%, 90% 38%, 83% 33%, 80% 31%, 78% 26%, 83% 22%, 84% 21%, 87% 20%, 88% 19%, 93% 17%, 96% 13%, 95% 11%, 91% 11%, 86% 15%, 79% 12%, 70% 8%, 69% 6%, 62% 10%, 46% 11%, 43% 12%, 36% 10%, 29% 8%, 21% 7%, 19% 6%, 18% 6%, 16% 7%, 15% 7%, 13% 6%, 12% 6%, 10% 7%, 8% 17%, 7% 20%, 7% 19%, 10% 13%)",
		"polygon(20% 11%, 16% 19%, 14% 29%, 12% 38%, 8% 47%, 12% 56%, 15% 57%, 19% 63%, 25% 67%, 28% 72%, 27% 78%, 29% 83%, 34% 77%, 46% 76%, 50% 73%, 58% 73%, 61% 74%, 68% 76%, 75% 75%, 81% 70%, 83% 68%, 84% 65%, 82% 60%, 90% 54%, 93% 53%, 97% 50%, 98% 46%, 92% 43%, 88% 38%, 92% 32%, 95% 24%, 96% 17%, 92% 13%, 87% 11%, 82% 17%, 81% 18%, 74% 20%, 69% 15%, 64% 9%, 57% 6%, 50% 14%, 42% 17%, 39% 17%, 20% 21%, 18% 15%)",
		"polygon(91% 13%, 84% 19%, 87% 24%, 89% 24%, 90% 23%, 89% 16%, 88% 14%, 84% 17%, 85% 20%, 89% 24%, 91% 24%, 96% 28%, 91% 37%, 88% 41%, 82% 42%, 86% 38%, 82% 34%, 85% 34%, 89% 39%, 87% 50%, 85% 52%, 85% 54%, 83% 49%, 81% 47%, 80% 48%, 71% 53%, 68% 59%, 70% 64%, 81% 70%, 85% 63%, 74% 62%, 69% 68%, 68% 74%, 71% 78%, 65% 88%, 61% 91%, 42% 91%, 41% 88%, 40% 83%, 44% 84%, 44% 88%, 48% 92%, 55% 92%, 62% 91%, 69% 84%, 71% 80%, 63% 77%, 61% 77%, 54% 75%, 48% 72%, 43% 70%, 36% 64%, 27% 66%, 27% 71%, 34% 67%, 43% 71%, 54% 72%, 63% 73%, 80% 83%, 78% 85%, 73% 88%, 78% 82%, 76% 74%, 79% 74%, 85% 75%, 88% 75%, 87% 82%, 87% 83%, 81% 73%, 80% 65%, 75% 55%, 69% 44%, 53% 29%, 49% 31%, 46% 33%, 45% 36%, 45% 36%, 46% 39%, 50% 40%, 48% 35%, 52% 24%, 57% 30%, 61% 40%, 58% 54%, 59% 69%, 57% 74%, 46% 75%, 26% 82%, 25% 82%, 22% 83%, 9% 83%, 3% 93%, 8% 94%, 2% 88%, 3% 87%, 7% 88%, 11% 89%, 13% 88%, 20% 87%, 24% 85%, 29% 81%, 30% 80%, 37% 77%, 42% 75%, 45% 72%, 55% 77%, 61% 82%, 64% 73%, 62% 68%, 57% 65%, 56% 54%, 63% 38%, 63% 31%, 67% 30%, 73% 34%, 76% 41%, 79% 44%, 82% 47%, 91% 51%, 92% 52%)",
		"polygon(21% 9%, 16% 5%, 14% 10%, 13% 13%, 15% 15%, 18% 9%, 20% 7%, 25% 13%, 21% 17%, 18% 22%, 13% 29%, 9% 40%, 9% 50%, 13% 51%, 14% 46%, 11% 43%, 10% 38%, 11% 33%, 19% 24%, 22% 23%, 28% 12%, 25% 17%, 21% 29%, 17% 38%, 21% 45%, 24% 46%, 25% 46%, 22% 42%, 20% 42%, 19% 33%, 23% 28%, 28% 25%, 33% 26%, 39% 29%, 41% 19%, 62% 28%, 72% 28%, 81% 30%, 80% 27%, 79% 26%, 78% 24%, 71% 28%, 61% 30%, 58% 32%, 50% 33%, 44% 26%, 40% 24%, 39% 22%, 52% 19%, 57% 22%, 56% 27%, 52% 28%, 46% 28%, 42% 28%, 38% 29%, 36% 41%, 36% 55%, 35% 62%, 36% 67%, 39% 71%, 47% 79%, 52% 85%, 57% 89%, 58% 93%, 63% 88%, 61% 84%, 46% 76%, 43% 75%, 41% 67%, 40% 59%, 51% 57%, 63% 60%, 67% 60%, 72% 63%, 78% 68%, 82% 73%, 87% 75%, 91% 73%, 95% 69%, 96% 63%, 92% 55%, 91% 61%, 87% 64%, 90% 66%, 84% 69%, 82% 64%, 86% 59%, 92% 52%, 96% 50%, 93% 74%, 93% 80%, 91% 86%, 90% 88%, 87% 82%, 81% 77%, 80% 71%, 78% 64%, 87% 54%, 94% 57%, 87% 61%, 70% 58%, 70% 51%, 68% 51%, 64% 64%, 57% 67%, 49% 64%, 42% 56%, 39% 51%, 55% 58%, 67% 64%, 74% 63%, 76% 61%, 84% 50%, 75% 58%, 65% 65%, 61% 68%, 57% 68%, 50% 68%, 48% 64%, 42% 58%, 38% 48%, 43% 43%, 50% 49%, 48% 63%, 57% 70%, 61% 71%, 65% 69%, 60% 58%, 40% 45%, 39% 43%, 39% 42%, 36% 41%, 38% 38%, 39% 37%, 39% 35%, 36% 27%, 35% 25%, 30% 22%, 26% 23%, 25% 23%, 24% 24%)",
		"polygon(43% 5%, 32% 8%, 30% 10%, 26% 9%, 22% 21%, 25% 24%, 27% 30%, 27% 36%, 24% 37%, 21% 39%, 22% 47%, 24% 54%, 21% 60%, 18% 68%, 18% 77%, 22% 72%, 28% 75%, 32% 89%, 28% 93%, 33% 94%, 37% 91%, 38% 87%, 39% 83%, 42% 80%, 44% 70%, 42% 64%, 40% 61%, 41% 54%, 40% 46%, 52% 50%, 62% 59%, 64% 55%, 63% 53%, 61% 47%, 63% 42%, 63% 36%, 60% 32%, 59% 26%, 56% 20%, 53% 23%, 53% 28%, 53% 29%, 50% 32%, 47% 33%, 45% 26%, 44% 21%, 41% 17%, 42% 14%, 43% 12%, 45% 9%, 45% 8%)",
		"polygon(88% 29%, 78% 22%, 74% 25%, 75% 30%, 77% 28%, 79% 25%, 85% 25%, 83% 30%, 85% 34%, 82% 36%, 80% 35%, 76% 39%, 33% 53%, 28% 56%, 26% 72%, 27% 76%, 34% 80%, 37% 85%, 44% 86%, 47% 82%, 49% 76%, 51% 75%, 60% 76%, 64% 79%, 69% 80%, 72% 76%, 74% 72%, 73% 72%, 70% 70%, 70% 69%, 76% 66%, 77% 64%, 74% 61%, 67% 62%, 65% 61%, 59% 60%, 57% 61%, 55% 61%, 57% 55%, 56% 50%, 64% 55%, 64% 53%, 62% 50%, 67% 48%, 59% 47%, 65% 44%, 69% 46%, 71% 48%, 72% 45%, 71% 40%, 68% 38%, 63% 41%, 57% 44%, 53% 45%, 53% 50%, 50% 52%, 44% 53%, 44% 47%, 38% 48%, 36% 48%, 30% 52%, 26% 58%, 32% 68%, 30% 70%, 28% 72%)",
		"polygon(30% 8%, 21% 11%, 19% 18%, 18% 26%, 12% 30%, 10% 33%, 13% 40%, 18% 35%, 18% 33%, 20% 31%, 24% 33%, 25% 37%, 23% 42%, 20% 49%, 16% 55%, 10% 59%, 7% 62%, 6% 70%, 12% 82%, 15% 87%, 19% 91%, 27% 91%, 28% 88%, 25% 84%, 27% 80%, 31% 79%, 32% 78%, 37% 75%, 38% 74%, 39% 70%, 40% 64%, 43% 57%, 44% 55%, 39% 49%, 35% 48%, 35% 38%, 38% 28%, 45% 28%, 53% 31%, 55% 27%, 69% 23%, 79% 26%, 86% 20%, 91% 18%, 93% 10%, 90% 10%, 82% 15%, 80% 17%, 76% 19%, 68% 18%, 57% 24%, 53% 25%, 42% 23%, 43% 19%, 45% 14%, 42% 14%, 39% 16%, 39% 21%, 37% 25%, 34% 27%, 32% 27%, 29% 26%, 30% 19%, 31% 17%)",
		"polygon(28% 10%, 21% 7%, 15% 8%, 13% 13%, 12% 21%, 11% 27%, 14% 34%, 21% 30%, 20% 27%, 25% 23%, 28% 22%, 31% 19%, 28% 16%, 31% 15%, 31% 13%, 31% 12%, 29% 11%, 28% 11%, 72% 33%, 65% 40%, 69% 49%, 71% 49%, 74% 43%, 74% 39%, 75% 37%, 78% 35%, 77% 32%, 77% 31%, 72% 33%, 61% 27%, 49% 23%, 50% 27%, 52% 27%, 53% 21%, 52% 20%, 51% 20%, 45% 24%, 42% 31%, 45% 30%, 46% 27%, 42% 22%, 42% 17%)",
		"polygon(90% 5%, 87% 9%, 86% 14%, 89% 18%, 89% 27%, 88% 37%, 86% 47%, 88% 52%, 90% 59%, 94% 60%, 96% 52%, 96% 48%, 94% 46%, 94% 42%, 95% 37%, 95% 35%, 94% 32%, 94% 30%, 94% 26%, 95% 20%, 95% 13%, 95% 12%, 94% 10%, 87% 12%, 78% 21%, 34% 39%, 16% 42%, 9% 45%, 21% 64%, 18% 72%, 18% 76%, 17% 78%, 23% 83%, 26% 82%, 28% 78%, 27% 73%, 25% 68%, 19% 65%, 15% 63%, 15% 63%, 18% 52%, 18% 51%, 13% 43%, 14% 37%, 19% 26%, 24% 25%, 30% 29%, 33% 44%, 36% 53%, 40% 58%, 42% 55%, 40% 53%, 36% 46%, 36% 41%, 37% 35%, 41% 34%, 45% 37%, 62% 29%, 64% 29%, 71% 25%, 74% 23%, 81% 17%, 82% 16%)",
		"polygon(88% 27%, 89% 24%, 92% 19%, 92% 13%, 85% 10%, 78% 14%, 66% 12%, 58% 10%, 53% 10%, 47% 14%, 44% 18%, 37% 24%, 26% 23%, 23% 12%, 16% 12%, 13% 15%, 16% 24%, 18% 32%, 25% 41%, 26% 47%, 26% 53%, 22% 63%, 19% 68%, 20% 73%, 23% 79%, 32% 83%, 35% 83%, 43% 85%, 46% 86%, 50% 84%, 57% 90%, 66% 89%, 68% 83%, 65% 80%, 63% 81%, 61% 83%, 57% 83%, 51% 77%, 48% 76%, 47% 69%, 49% 63%, 45% 60%, 41% 56%, 38% 56%, 35% 57%, 34% 46%, 31% 36%, 29% 31%, 25% 27%, 28% 20%, 35% 19%, 43% 23%, 55% 18%, 59% 17%, 66% 19%, 69% 20%, 73% 25%, 77% 33%, 83% 34%, 90% 36%, 91% 36%, 93% 36%, 95% 44%, 95% 52%, 94% 51%, 98% 50%, 98% 46%, 98% 39%, 95% 38%, 90% 33%, 83% 32%, 80% 33%, 79% 29%, 82% 21%, 86% 22%, 90% 27%, 92% 25%)",
		"polygon(23% 16%, 19% 11%, 20% 17%, 16% 16%, 12% 15%, 10% 15%, 8% 23%, 6% 32%, 10% 40%, 10% 52%, 11% 61%, 21% 72%, 23% 68%, 23% 68%, 24% 64%, 27% 62%, 28% 57%, 28% 53%, 29% 50%, 33% 48%, 35% 49%, 38% 50%, 45% 55%, 48% 57%, 53% 54%, 56% 51%, 58% 46%, 54% 39%, 61% 36%, 75% 37%, 80% 37%, 84% 33%, 87% 27%, 90% 25%, 88% 24%, 87% 20%, 85% 19%, 84% 23%, 82% 26%, 77% 27%, 74% 25%, 69% 22%, 69% 21%, 62% 20%, 57% 21%, 52% 22%, 48% 23%, 46% 22%, 43% 20%, 39% 17%, 25% 19%, 22% 19%, 21% 14%, 21% 10%, 19% 11%)",
		"polygon(89% 8%, 79% 10%, 78% 16%, 78% 22%, 73% 28%, 61% 33%, 57% 32%, 47% 35%, 44% 48%, 42% 57%, 36% 63%, 29% 67%, 22% 66%, 17% 49%, 14% 31%, 8% 25%, 4% 30%, 4% 43%, 6% 55%, 7% 59%, 11% 59%, 14% 55%, 14% 56%, 22% 63%, 23% 69%, 20% 78%, 16% 80%, 15% 84%, 19% 90%, 22% 90%, 26% 88%, 31% 86%, 28% 75%, 26% 65%, 27% 59%, 35% 54%, 45% 54%, 53% 57%, 55% 53%, 64% 47%, 67% 42%, 67% 41%, 57% 30%, 58% 27%, 64% 25%, 73% 25%, 80% 31%, 86% 31%, 93% 21%, 90% 16%, 81% 18%, 74% 24%, 82% 35%, 83% 39%, 83% 41%, 85% 19%, 82% 15%, 79% 10%, 86% 7%, 93% 25%, 89% 32%, 82% 38%, 67% 37%, 52% 41%, 46% 46%, 47% 54%, 53% 66%, 56% 72%, 55% 73%, 38% 67%, 42% 55%, 45% 46%, 58% 49%, 64% 54%, 70% 57%, 72% 49%, 58% 37%, 49% 42%, 44% 63%, 43% 71%, 42% 77%, 41% 81%, 38% 82%, 34% 78%, 51% 77%, 55% 77%, 58% 74%, 66% 67%, 62% 62%, 59% 61%, 59% 61%, 56% 55%, 54% 43%, 57% 38%, 62% 37%, 72% 41%, 64% 56%, 32% 68%, 29% 68%, 12% 75%, 11% 72%, 18% 65%, 21% 52%, 19% 50%, 6% 48%, 7% 47%, 22% 38%, 30% 54%, 43% 71%, 44% 79%, 48% 88%, 32% 78%, 30% 71%, 29% 67%, 37% 47%, 33% 50%, 39% 65%, 38% 78%, 37% 86%, 82% 73%, 75% 88%, 80% 81%, 84% 72%, 86% 65%, 84% 62%, 82% 59%, 80% 63%, 82% 50%, 83% 57%, 70% 62%, 85% 46%)",
		"polygon(28% 7%, 25% 8%, 23% 8%, 19% 7%, 16% 8%, 12% 11%, 9% 15%, 8% 24%, 12% 34%, 13% 41%, 13% 44%, 17% 42%, 19% 44%, 22% 51%, 23% 55%, 23% 63%, 22% 70%, 29% 77%, 33% 82%, 36% 90%, 32% 91%, 27% 89%, 20% 84%, 18% 83%, 15% 87%, 14% 91%, 15% 94%, 19% 93%, 20% 94%, 23% 97%, 24% 93%, 24% 90%, 27% 90%, 29% 92%, 37% 93%, 38% 94%, 41% 92%, 43% 89%, 42% 86%, 41% 85%, 38% 84%, 35% 80%, 33% 77%, 32% 73%, 35% 72%, 35% 71%, 38% 65%, 37% 57%, 36% 51%, 36% 43%, 36% 33%, 35% 32%, 33% 29%, 31% 24%, 35% 17%, 34% 14%, 33% 17%, 32% 19%, 32% 21%, 31% 23%, 31% 27%, 32% 30%, 30% 34%, 29% 34%, 27% 34%, 25% 32%, 25% 32%, 25% 25%, 26% 22%, 26% 19%, 25% 19%, 25% 16%, 28% 12%, 29% 11%, 29% 9%, 29% 8%)",
		"polygon(12% 68%, 11% 63%, 10% 59%, 7% 53%, 11% 47%, 14% 42%, 17% 33%, 20% 30%, 21% 28%, 24% 24%, 27% 28%, 28% 31%, 32% 31%, 38% 26%, 42% 22%, 52% 16%, 59% 13%, 71% 10%, 77% 7%, 81% 5%, 75% 17%, 76% 27%, 66% 44%, 72% 53%, 77% 56%, 79% 53%, 80% 59%, 80% 66%, 84% 72%, 87% 75%, 86% 80%, 84% 83%, 78% 86%, 71% 88%, 65% 90%, 58% 92%, 52% 93%, 42% 95%, 41% 95%, 37% 93%, 36% 92%, 36% 89%, 40% 89%, 43% 90%, 45% 90%, 48% 86%, 49% 86%, 51% 83%, 52% 80%, 52% 77%, 54% 74%, 56% 73%, 59% 72%, 63% 72%, 67% 69%, 67% 64%, 67% 60%, 67% 56%, 66% 52%, 65% 49%, 65% 45%, 64% 41%, 67% 35%, 69% 30%, 68% 24%, 67% 24%, 68% 17%, 63% 15%, 58% 16%, 55% 17%, 50% 19%, 41% 23%, 40% 24%, 42% 32%, 40% 36%, 37% 41%, 35% 50%, 35% 57%, 31% 63%, 31% 61%, 28% 70%, 26% 74%, 26% 76%, 24% 76%, 23% 67%, 22% 67%, 19% 64%, 17% 67%, 17% 68%, 16% 68%, 15% 69%)",
		"polygon(29% 8%, 27% 8%, 26% 10%, 25% 13%, 20% 16%, 20% 21%, 16% 22%, 15% 21%, 14% 17%, 15% 13%, 14% 11%, 10% 6%, 9% 5%, 6% 5%, 4% 7%, 7% 12%, 10% 17%, 12% 23%, 12% 25%, 15% 26%, 15% 28%, 15% 32%, 14% 37%, 11% 39%, 10% 43%, 8% 50%, 10% 62%, 11% 74%, 12% 80%, 17% 71%, 17% 66%, 16% 63%, 16% 59%, 16% 55%, 16% 52%, 15% 46%, 13% 45%, 12% 44%, 15% 38%, 16% 36%, 16% 34%, 17% 29%, 17% 28%, 20% 23%, 27% 30%, 27% 33%, 28% 41%, 34% 56%, 34% 59%, 32% 62%, 34% 66%, 38% 67%, 47% 63%, 51% 63%, 56% 66%, 70% 74%, 78% 79%, 84% 82%, 89% 85%, 93% 82%, 95% 74%, 96% 68%, 98% 64%, 94% 63%, 91% 64%, 90% 66%, 86% 67%, 87% 58%, 86% 53%, 87% 49%, 86% 44%, 87% 37%, 90% 29%, 90% 21%, 86% 16%, 83% 13%, 80% 9%, 77% 8%, 72% 9%, 72% 10%, 71% 13%, 70% 13%, 65% 12%, 62% 10%, 59% 8%, 55% 7%, 51% 9%, 49% 10%, 45% 12%, 42% 13%, 38% 13%, 35% 14%, 31% 11%, 31% 10%, 30% 7%)",
		"polygon(20% 13%, 25% 22%, 29% 24%, 30% 24%, 31% 19%, 33% 17%, 25% 19%, 21% 22%, 25% 16%, 30% 13%, 37% 14%, 55% 23%, 70% 31%, 72% 29%, 76% 24%, 78% 19%, 94% 21%, 85% 25%, 79% 24%, 79% 19%, 90% 12%, 93% 10%, 94% 7%, 79% 9%, 76% 18%, 84% 23%, 90% 28%, 88% 29%, 79% 32%, 76% 33%, 75% 30%, 80% 25%, 91% 24%, 93% 19%, 91% 18%, 72% 24%, 67% 31%, 65% 30%, 62% 32%, 57% 29%, 59% 25%, 61% 23%, 58% 22%, 49% 18%, 46% 17%, 41% 16%, 36% 16%, 36% 16%)"
		];
	var len = clipPaths.length;
	var idx = getRandomInt( 0, len );
	return clipPaths[idx];
}

// <---------------------------------------- Remove Operations ---------------------------------------->
async function setTimeOutRemoveVideo(min, max)
{   
	if (container.hasChildNodes())
	{
		var ms = getRandomInt( min, max+1 ) * 1000;
		window.setTimeout(removeRandomVideo, ms);
	}
}

function manualRemoveVideo()
{
	var container       = document.getElementById("container");
	var elementToRemove = document.getElementById(ID.toString());
	if (elementToRemove != null)
	{
		container.removeChild(elementToRemove);
		console.log("Manual Removed ---> [ %d ]", ID);
		ID_ARRAY[ID]--;
	}
}

function removeRandomVideo()
{
	var id = getRandomActiveID();
	var container       = document.getElementById("container");
	var elementToRemove = document.getElementById(id.toString());
	if (elementToRemove != null)
	{
		container.removeChild(elementToRemove);
		console.log("Auto Removed ---------> [ %d ]", id);
		ID_ARRAY[id]--;
	}
}

// <---------------------------------------- Switch Operations ---------------------------------------->
async function setTimeOutSwitchID(ms)
{   
	window.setTimeout(switchID, ms);
}

function switchID()
{	
	var element = document.getElementById( ID.toString() );
	if (element != null)
	{
		element.style.zIndex = 1;
	}

	ID = getRandomActiveID();
	console.log("Switch ID ------------> [ %d ]", ID);
	

	// element = document.getElementById( ID.toString() );
	// if (element != null)
	// {
	// 	element.style.zIndex = 999;
	// }
}

// <---------------------------------------- General Operations ---------------------------------------->
function wait(ms)
{
	return new Promise(resolve => {
			setTimeout(()=>{resolve('')},ms);
		})
}

function getRandomInt(min, max) //Output Include Min & Exclude Max
{	
	min = Math.ceil(min);
	max = Math.floor(max);
	return Math.floor(Math.random() * (max - min) + min);
}

function createArray()
{
	var i;
	for (i=0; i<=FILE_QTY; i++)
	{
		ID_ARRAY.push(0);
	}
}

function getRandomActiveID()
{
	var tmp = [];
	var i;
	for (i=1; i<=FILE_QTY; i++)
	{
		if ( ID_ARRAY[i] != 0 )
		{
			tmp.push(i);
		}
	}

	var len = tmp.length;
	if (len == 0)
	{
		appendVideo(FILE_QTY, WIDTH_MIN, WIDTH_MAX, WIDTH_PX_SCALE, HEIGHT_MIN, HEIGHT_MAX, HEIGHT_PX_SCALE, TOP_MIN, TOP_MAX, TOP_MARGIN_PX_SCALE, LEFT_MIN, LEFT_MAX, LEFT_MARGIN_PX_SCALE);  // Append Video when no active ID found
		return 0;
	}
	else
	{
		var id = tmp[getRandomInt(0, len)];
	}

	return id;
}

function drawHands( x_thumb, y_thumb, x_thumb_mcp, y_thumb_mcp,	x_index, y_index, x_index_mcp, y_index_mcp,	x_middle, y_middle, x_middle_mcp, y_middle_mcp, x_ring, y_ring, x_ring_mcp, y_ring_mcp, x_pinky, y_pinky, x_pinky_mcp, y_pinky_mcp, x_wrist, y_wrist, x_thumb_index_median, y_thumb_index_median  )
{
	var thumb      = document.getElementById("thumb");
	var index      = document.getElementById("index");
	var middle     = document.getElementById("middle");
	var ring       = document.getElementById("ring");
	var pinky      = document.getElementById("pinky");
	var thumb_mcp  = document.getElementById("thumb_mcp");
	var index_mcp  = document.getElementById("index_mcp");
	var middle_mcp = document.getElementById("middle_mcp");
	var ring_mcp   = document.getElementById("ring_mcp");
	var pinky_mcp  = document.getElementById("pinky_mcp");
	var wrist      = document.getElementById("wrist");
	var median     = document.getElementById("thumb_index_median");
	
	var stretch_size = Math.trunc( Math.sqrt( Math.pow( x_index-x_thumb, 2) + Math.pow( y_index-y_thumb, 2 ) ) );

	thumb.style.position = "absolute";
	thumb.style.marginLeft = x_thumb + "px";
	thumb.style.marginTop = y_thumb + "px";
	thumb.innerText = "Thumb\n" +"X : "+ x_thumb.toString() + '\n' + "Y : "+ y_thumb.toString() ;
	
	thumb_mcp.style.position = "absolute";
	thumb_mcp.style.marginLeft = x_thumb_mcp + "px";
	thumb_mcp.style.marginTop = y_thumb_mcp + "px";
	thumb_mcp.innerText = "thumb_mcp\n" +"X : "+ x_thumb_mcp.toString() + '\n' + "Y : "+ y_thumb_mcp.toString() ;

	index.style.position = "absolute";
	index.style.marginLeft = x_index + "px";
	index.style.marginTop = y_index + "px";
	index.innerText = "Index\n" +"X : "+ x_index.toString() + '\n' + "Y : "+ y_index.toString() ;
	
	index_mcp.style.position = "absolute";
	index_mcp.style.marginLeft = x_index_mcp + "px";
	index_mcp.style.marginTop = y_index_mcp + "px";
	index_mcp.innerText = "index_mcp\n" +"X : "+ x_index_mcp.toString() + '\n' + "Y : "+ y_index_mcp.toString() ;

	middle.style.position = "absolute";
	middle.style.marginLeft = x_middle + "px";
	middle.style.marginTop = y_middle + "px";
	middle.innerText = "Middle\n" +"X : "+ x_middle.toString() + '\n' + "Y : "+ y_middle.toString() ;

	middle_mcp.style.position = "absolute";
	middle_mcp.style.marginLeft = x_middle_mcp + "px";
	middle_mcp.style.marginTop = y_middle_mcp + "px";
	middle_mcp.innerText = "middle_mcp\n" +"X : "+ x_middle_mcp.toString() + '\n' + "Y : "+ y_middle_mcp.toString() ;

	ring.style.position = "absolute";
	ring.style.marginLeft = x_ring + "px";
	ring.style.marginTop = y_ring + "px";
	ring.innerText = "Ring\n" +"X : "+ x_ring.toString() + '\n' + "Y : "+ y_ring.toString() ;

	ring_mcp.style.position = "absolute";
	ring_mcp.style.marginLeft = x_ring_mcp + "px";
	ring_mcp.style.marginTop = y_ring_mcp + "px";
	ring_mcp.innerText = "ring_mcp\n" +"X : "+ x_ring_mcp.toString() + '\n' + "Y : "+ y_ring_mcp.toString() ;

	pinky.style.position = "absolute";
	pinky.style.marginLeft = x_pinky + "px";
	pinky.style.marginTop = y_pinky + "px";
	pinky.innerText = "pinky\n" +"X : "+ x_pinky.toString() + '\n' + "Y : "+ y_pinky.toString() ;

	pinky_mcp.style.position = "absolute";
	pinky_mcp.style.marginLeft = x_pinky_mcp + "px";
	pinky_mcp.style.marginTop = y_pinky_mcp + "px";
	pinky_mcp.innerText = "pinky_mcp\n" +"X : "+ x_pinky_mcp.toString() + '\n' + "Y : "+ y_pinky_mcp.toString() ;

	wrist.style.position = "absolute";
	wrist.style.marginLeft = x_wrist + "px";
	wrist.style.marginTop = y_wrist + "px";
	wrist.innerText = "Wrist\n" +"X : "+ x_wrist.toString() + '\n' + "Y : "+ y_wrist.toString() + '\n' + "Size : "+ stretch_size.toString();

	median.style.position = "absolute";
	// median.style.marginLeft = (x_thumb_index_median * X_MAGNIFY) + "px";
	// median.style.marginTop = ( (y_thumb_index_median * Y_MAGNIFY) - Y_TOP_GAP ) + "px";
	// median.innerText = "Median\n" +"X : "+ ( (y_thumb_index_median * Y_MAGNIFY) - Y_TOP_GAP ).toString() + '\n' + "Y : "+ (x_thumb_index_median * X_MAGNIFY).toString() ;
	median.style.marginLeft = x_thumb_index_median + "px";
	median.style.marginTop = y_thumb_index_median + "px";
	median.innerText = "Median\n" +"X : "+ x_thumb_index_median.toString() + '\n' + "Y : "+ y_thumb_index_median.toString() ;
}